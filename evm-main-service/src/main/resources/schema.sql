-- DROP TABLE IF EXISTS requests CASCADE;
-- DROP TABLE IF EXISTS events CASCADE;
-- DROP TABLE IF EXISTS users CASCADE;
-- DROP TABLE IF EXISTS categories CASCADE;
-- DROP TABLE IF EXISTS compilations CASCADE;
-- DROP TABLE IF EXISTS compilation_events CASCADE;

CREATE TABLE IF NOT EXISTS users
(
    id    integer      NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    email varchar(254) NOT NULL,
    name  varchar(250) NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT uq_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories
(
    id   integer     NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(50) NOT NULL,
    CONSTRAINT categories_pkey PRIMARY KEY (id),
    CONSTRAINT uq_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS events
(
    id                 integer                     NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    annotation         varchar(2000)               NOT NULL,
    category_id        integer                     NOT NULL,
    description        varchar(7000)               NOT NULL,
    event_date         timestamp without time zone NOT NULL,
    lat                float                       NOT NULL,
    lon                float                       NOT NULL,
    paid               boolean                              DEFAULT FALSE,
    participant_limit  integer                              DEFAULT 0,
    confirmed_requests integer                              DEFAULT 0,
    request_moderation boolean                              DEFAULT TRUE,
    title              varchar(120)                NOT NULL,
    created_date       timestamp without time zone NOT NULL DEFAULT (now() AT TIME ZONE 'utc'),
    published_date     timestamp without time zone,
    state              varchar(9)                  NOT NULL DEFAULT 'PENDING',
    initiator_id       integer                     NOT NULL,
    CONSTRAINT events_pkey PRIMARY KEY (id),
    CONSTRAINT fk_category FOREIGN KEY (category_id)
        REFERENCES categories (id)
        ON UPDATE CASCADE
        ON DELETE RESTRICT,
    CONSTRAINT fk_initiator FOREIGN KEY (initiator_id)
        REFERENCES users (id)
        ON UPDATE CASCADE
        ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS requests
(
    id           integer                     NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created_date timestamp without time zone NOT NULL,
    event_id     integer                     NOT NULL,
    requester_id integer                     NOT NULL,
    status       varchar(9)                  NOT NULL,
    CONSTRAINT requests_pkey PRIMARY KEY (id),
    CONSTRAINT fk_event FOREIGN KEY (event_id)
        REFERENCES events (id)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    CONSTRAINT fk_user FOREIGN KEY (requester_id)
        REFERENCES users (id)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilations
(
    id     integer               NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    pinned boolean               NOT NULL,
    title  character varying(50) NOT NULL UNIQUE,
    CONSTRAINT compilations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilation_events
(
    compilation_id integer NOT NULL,
    event_id integer NOT NULL,
    CONSTRAINT composite_pk PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT fk_compilation FOREIGN KEY (compilation_id)
        REFERENCES compilations (id)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    CONSTRAINT fk_event FOREIGN KEY (event_id)
        REFERENCES events (id)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);
